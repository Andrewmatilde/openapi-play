/**
 * K8S Resource API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Ingress from './Ingress';
import IngressMetadata from './IngressMetadata';
import Pod from './Pod';
import PodSpec from './PodSpec';
import PodStatus from './PodStatus';

/**
 * The K8sResource model module.
 * @module model/K8sResource
 * @version 1.0.0
 */
class K8sResource {
    /**
     * Constructs a new <code>K8sResource</code>.
     * @alias module:model/K8sResource
     * @param {(module:model/Ingress|module:model/Pod)} instance The actual instance to initialize K8sResource.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "Ingress") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                Ingress.validateJSON(instance); // throw an exception if no match
                // create Ingress from JS object
                this.actualInstance = Ingress.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into Ingress
            errorMessages.push("Failed to construct Ingress: " + err)
        }

        try {
            if (typeof instance === "Pod") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                Pod.validateJSON(instance); // throw an exception if no match
                // create Pod from JS object
                this.actualInstance = Pod.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into Pod
            errorMessages.push("Failed to construct Pod: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `K8sResource` with oneOf schemas Ingress, Pod. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `K8sResource` with oneOf schemas Ingress, Pod. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>K8sResource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/K8sResource} obj Optional instance to populate.
     * @return {module:model/K8sResource} The populated <code>K8sResource</code> instance.
     */
    static constructFromObject(data, obj) {
        return new K8sResource(data);
    }

    /**
     * Gets the actual instance, which can be <code>Ingress</code>, <code>Pod</code>.
     * @return {(module:model/Ingress|module:model/Pod)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>Ingress</code>, <code>Pod</code>.
     * @param {(module:model/Ingress|module:model/Pod)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = K8sResource.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of K8sResource from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/K8sResource} An instance of K8sResource.
     */
    static fromJSON = function(json_string){
        return K8sResource.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
 * @member {String} apiVersion
 */
K8sResource.prototype['apiVersion'] = undefined;

/**
 * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
 * @member {String} kind
 */
K8sResource.prototype['kind'] = undefined;

/**
 * @member {module:model/IngressMetadata} metadata
 */
K8sResource.prototype['metadata'] = undefined;

/**
 * @member {module:model/PodSpec} spec
 */
K8sResource.prototype['spec'] = undefined;

/**
 * @member {module:model/PodStatus} status
 */
K8sResource.prototype['status'] = undefined;


K8sResource.OneOf = ["Ingress", "Pod"];

export default K8sResource;

