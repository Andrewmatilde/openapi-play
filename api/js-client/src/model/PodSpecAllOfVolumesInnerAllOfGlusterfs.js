/**
 * K8S Resource API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PodSpecAllOfVolumesInnerAllOfGlusterfs model module.
 * @module model/PodSpecAllOfVolumesInnerAllOfGlusterfs
 * @version 1.0.0
 */
class PodSpecAllOfVolumesInnerAllOfGlusterfs {
    /**
     * Constructs a new <code>PodSpecAllOfVolumesInnerAllOfGlusterfs</code>.
     * glusterfs represents a Glusterfs mount on the host that shares a pod&#39;s lifetime. Deprecated: Glusterfs is deprecated and the in-tree glusterfs type is no longer supported. More info: https://examples.k8s.io/volumes/glusterfs/README.md
     * @alias module:model/PodSpecAllOfVolumesInnerAllOfGlusterfs
     * @param endpoints {String} endpoints is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
     * @param path {String} path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
     */
    constructor(endpoints, path) { 
        
        PodSpecAllOfVolumesInnerAllOfGlusterfs.initialize(this, endpoints, path);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, endpoints, path) { 
        obj['endpoints'] = endpoints || '';
        obj['path'] = path || '';
    }

    /**
     * Constructs a <code>PodSpecAllOfVolumesInnerAllOfGlusterfs</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PodSpecAllOfVolumesInnerAllOfGlusterfs} obj Optional instance to populate.
     * @return {module:model/PodSpecAllOfVolumesInnerAllOfGlusterfs} The populated <code>PodSpecAllOfVolumesInnerAllOfGlusterfs</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PodSpecAllOfVolumesInnerAllOfGlusterfs();

            if (data.hasOwnProperty('endpoints')) {
                obj['endpoints'] = ApiClient.convertToType(data['endpoints'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('readOnly')) {
                obj['readOnly'] = ApiClient.convertToType(data['readOnly'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PodSpecAllOfVolumesInnerAllOfGlusterfs</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PodSpecAllOfVolumesInnerAllOfGlusterfs</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PodSpecAllOfVolumesInnerAllOfGlusterfs.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['endpoints'] && !(typeof data['endpoints'] === 'string' || data['endpoints'] instanceof String)) {
            throw new Error("Expected the field `endpoints` to be a primitive type in the JSON string but got " + data['endpoints']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }

        return true;
    }


}

PodSpecAllOfVolumesInnerAllOfGlusterfs.RequiredProperties = ["endpoints", "path"];

/**
 * endpoints is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
 * @member {String} endpoints
 * @default ''
 */
PodSpecAllOfVolumesInnerAllOfGlusterfs.prototype['endpoints'] = '';

/**
 * path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
 * @member {String} path
 * @default ''
 */
PodSpecAllOfVolumesInnerAllOfGlusterfs.prototype['path'] = '';

/**
 * readOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
 * @member {Boolean} readOnly
 */
PodSpecAllOfVolumesInnerAllOfGlusterfs.prototype['readOnly'] = undefined;






export default PodSpecAllOfVolumesInnerAllOfGlusterfs;

