/**
 * K8S Resource API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PodSpecAllOfContainersInnerAllOfLifecycleAllOfPostStartAllOfTcpSocketAllOfPort from './PodSpecAllOfContainersInnerAllOfLifecycleAllOfPostStartAllOfTcpSocketAllOfPort';

/**
 * The PodSpecAllOfContainersInnerAllOfLivenessProbeAllOfTcpSocket model module.
 * @module model/PodSpecAllOfContainersInnerAllOfLivenessProbeAllOfTcpSocket
 * @version 1.0.0
 */
class PodSpecAllOfContainersInnerAllOfLivenessProbeAllOfTcpSocket {
    /**
     * Constructs a new <code>PodSpecAllOfContainersInnerAllOfLivenessProbeAllOfTcpSocket</code>.
     * TCPSocket specifies a connection to a TCP port.
     * @alias module:model/PodSpecAllOfContainersInnerAllOfLivenessProbeAllOfTcpSocket
     * @param port {module:model/PodSpecAllOfContainersInnerAllOfLifecycleAllOfPostStartAllOfTcpSocketAllOfPort} 
     */
    constructor(port) { 
        
        PodSpecAllOfContainersInnerAllOfLivenessProbeAllOfTcpSocket.initialize(this, port);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, port) { 
        obj['port'] = port;
    }

    /**
     * Constructs a <code>PodSpecAllOfContainersInnerAllOfLivenessProbeAllOfTcpSocket</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PodSpecAllOfContainersInnerAllOfLivenessProbeAllOfTcpSocket} obj Optional instance to populate.
     * @return {module:model/PodSpecAllOfContainersInnerAllOfLivenessProbeAllOfTcpSocket} The populated <code>PodSpecAllOfContainersInnerAllOfLivenessProbeAllOfTcpSocket</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PodSpecAllOfContainersInnerAllOfLivenessProbeAllOfTcpSocket();

            if (data.hasOwnProperty('host')) {
                obj['host'] = ApiClient.convertToType(data['host'], 'String');
            }
            if (data.hasOwnProperty('port')) {
                obj['port'] = PodSpecAllOfContainersInnerAllOfLifecycleAllOfPostStartAllOfTcpSocketAllOfPort.constructFromObject(data['port']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PodSpecAllOfContainersInnerAllOfLivenessProbeAllOfTcpSocket</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PodSpecAllOfContainersInnerAllOfLivenessProbeAllOfTcpSocket</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PodSpecAllOfContainersInnerAllOfLivenessProbeAllOfTcpSocket.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['host'] && !(typeof data['host'] === 'string' || data['host'] instanceof String)) {
            throw new Error("Expected the field `host` to be a primitive type in the JSON string but got " + data['host']);
        }
        // validate the optional field `port`
        if (data['port']) { // data not null
          PodSpecAllOfContainersInnerAllOfLifecycleAllOfPostStartAllOfTcpSocketAllOfPort.validateJSON(data['port']);
        }

        return true;
    }


}

PodSpecAllOfContainersInnerAllOfLivenessProbeAllOfTcpSocket.RequiredProperties = ["port"];

/**
 * Optional: Host name to connect to, defaults to the pod IP.
 * @member {String} host
 */
PodSpecAllOfContainersInnerAllOfLivenessProbeAllOfTcpSocket.prototype['host'] = undefined;

/**
 * @member {module:model/PodSpecAllOfContainersInnerAllOfLifecycleAllOfPostStartAllOfTcpSocketAllOfPort} port
 */
PodSpecAllOfContainersInnerAllOfLivenessProbeAllOfTcpSocket.prototype['port'] = undefined;






export default PodSpecAllOfContainersInnerAllOfLivenessProbeAllOfTcpSocket;

