/**
 * K8S Resource API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ResourceRequest model module.
 * @module model/ResourceRequest
 * @version 1.0.0
 */
class ResourceRequest {
    /**
     * Constructs a new <code>ResourceRequest</code>.
     * @alias module:model/ResourceRequest
     * @param group {String} API Group，比如 \"\"、\"apps\" 等
     * @param version {String} API Version，比如 \"v1\"
     * @param kind {String} 资源类型，比如 \"Pod\"、\"Deployment\"
     * @param namespace {String} 资源所在的 namespace
     * @param name {String} 资源名称
     */
    constructor(group, version, kind, namespace, name) { 
        
        ResourceRequest.initialize(this, group, version, kind, namespace, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, group, version, kind, namespace, name) { 
        obj['group'] = group;
        obj['version'] = version;
        obj['kind'] = kind;
        obj['namespace'] = namespace;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>ResourceRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResourceRequest} obj Optional instance to populate.
     * @return {module:model/ResourceRequest} The populated <code>ResourceRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResourceRequest();

            if (data.hasOwnProperty('group')) {
                obj['group'] = ApiClient.convertToType(data['group'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('namespace')) {
                obj['namespace'] = ApiClient.convertToType(data['namespace'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResourceRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResourceRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ResourceRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['group'] && !(typeof data['group'] === 'string' || data['group'] instanceof String)) {
            throw new Error("Expected the field `group` to be a primitive type in the JSON string but got " + data['group']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['namespace'] && !(typeof data['namespace'] === 'string' || data['namespace'] instanceof String)) {
            throw new Error("Expected the field `namespace` to be a primitive type in the JSON string but got " + data['namespace']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}

ResourceRequest.RequiredProperties = ["group", "version", "kind", "namespace", "name"];

/**
 * API Group，比如 \"\"、\"apps\" 等
 * @member {String} group
 */
ResourceRequest.prototype['group'] = undefined;

/**
 * API Version，比如 \"v1\"
 * @member {String} version
 */
ResourceRequest.prototype['version'] = undefined;

/**
 * 资源类型，比如 \"Pod\"、\"Deployment\"
 * @member {String} kind
 */
ResourceRequest.prototype['kind'] = undefined;

/**
 * 资源所在的 namespace
 * @member {String} namespace
 */
ResourceRequest.prototype['namespace'] = undefined;

/**
 * 资源名称
 * @member {String} name
 */
ResourceRequest.prototype['name'] = undefined;






export default ResourceRequest;

