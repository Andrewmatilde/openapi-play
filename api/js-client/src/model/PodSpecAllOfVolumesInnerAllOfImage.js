/**
 * K8S Resource API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PodSpecAllOfVolumesInnerAllOfImage model module.
 * @module model/PodSpecAllOfVolumesInnerAllOfImage
 * @version 1.0.0
 */
class PodSpecAllOfVolumesInnerAllOfImage {
    /**
     * Constructs a new <code>PodSpecAllOfVolumesInnerAllOfImage</code>.
     * image represents an OCI object (a container image or artifact) pulled and mounted on the kubelet&#39;s host machine. The volume is resolved at pod startup depending on which PullPolicy value is provided:  - Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails. - Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn&#39;t present. - IfNotPresent: the kubelet pulls if the reference isn&#39;t already present on disk. Container creation will fail if the reference isn&#39;t present and the pull fails.  The volume gets re-resolved if the pod gets deleted and recreated, which means that new remote content will become available on pod recreation. A failure to resolve or pull the image during pod startup will block containers from starting and may add significant latency. Failures will be retried using normal volume backoff and will be reported on the pod reason and message. The types of objects that may be mounted by this volume are defined by the container runtime implementation on a host machine and at minimum must include all valid types supported by the container image field. The OCI object gets mounted in a single directory (spec.containers[*].volumeMounts.mountPath) by merging the manifest layers in the same way as for container images. The volume will be mounted read-only (ro) and non-executable files (noexec). Sub path mounts for containers are not supported (spec.containers[*].volumeMounts.subpath) before 1.33. The field spec.securityContext.fsGroupChangePolicy has no effect on this volume type.
     * @alias module:model/PodSpecAllOfVolumesInnerAllOfImage
     */
    constructor() { 
        
        PodSpecAllOfVolumesInnerAllOfImage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PodSpecAllOfVolumesInnerAllOfImage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PodSpecAllOfVolumesInnerAllOfImage} obj Optional instance to populate.
     * @return {module:model/PodSpecAllOfVolumesInnerAllOfImage} The populated <code>PodSpecAllOfVolumesInnerAllOfImage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PodSpecAllOfVolumesInnerAllOfImage();

            if (data.hasOwnProperty('pullPolicy')) {
                obj['pullPolicy'] = ApiClient.convertToType(data['pullPolicy'], 'String');
            }
            if (data.hasOwnProperty('reference')) {
                obj['reference'] = ApiClient.convertToType(data['reference'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PodSpecAllOfVolumesInnerAllOfImage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PodSpecAllOfVolumesInnerAllOfImage</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['pullPolicy'] && !(typeof data['pullPolicy'] === 'string' || data['pullPolicy'] instanceof String)) {
            throw new Error("Expected the field `pullPolicy` to be a primitive type in the JSON string but got " + data['pullPolicy']);
        }
        // ensure the json data is a string
        if (data['reference'] && !(typeof data['reference'] === 'string' || data['reference'] instanceof String)) {
            throw new Error("Expected the field `reference` to be a primitive type in the JSON string but got " + data['reference']);
        }

        return true;
    }


}



/**
 * Policy for pulling OCI objects. Possible values are: Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails. Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present. IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
 * @member {String} pullPolicy
 */
PodSpecAllOfVolumesInnerAllOfImage.prototype['pullPolicy'] = undefined;

/**
 * Required: Image or artifact reference to be used. Behaves in the same way as pod.spec.containers[*].image. Pull secrets will be assembled in the same way as for the container image by looking up node credentials, SA image pull secrets, and pod spec image pull secrets. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
 * @member {String} reference
 */
PodSpecAllOfVolumesInnerAllOfImage.prototype['reference'] = undefined;






export default PodSpecAllOfVolumesInnerAllOfImage;

