/**
 * K8S Resource API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IngressSpecAllOfDefaultBackendAllOfResource model module.
 * @module model/IngressSpecAllOfDefaultBackendAllOfResource
 * @version 1.0.0
 */
class IngressSpecAllOfDefaultBackendAllOfResource {
    /**
     * Constructs a new <code>IngressSpecAllOfDefaultBackendAllOfResource</code>.
     * resource is an ObjectRef to another Kubernetes resource in the namespace of the Ingress object. If resource is specified, a service.Name and service.Port must not be specified. This is a mutually exclusive setting with \&quot;Service\&quot;.
     * @alias module:model/IngressSpecAllOfDefaultBackendAllOfResource
     * @param kind {String} Kind is the type of resource being referenced
     * @param name {String} Name is the name of resource being referenced
     */
    constructor(kind, name) { 
        
        IngressSpecAllOfDefaultBackendAllOfResource.initialize(this, kind, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, kind, name) { 
        obj['kind'] = kind || '';
        obj['name'] = name || '';
    }

    /**
     * Constructs a <code>IngressSpecAllOfDefaultBackendAllOfResource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IngressSpecAllOfDefaultBackendAllOfResource} obj Optional instance to populate.
     * @return {module:model/IngressSpecAllOfDefaultBackendAllOfResource} The populated <code>IngressSpecAllOfDefaultBackendAllOfResource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IngressSpecAllOfDefaultBackendAllOfResource();

            if (data.hasOwnProperty('apiGroup')) {
                obj['apiGroup'] = ApiClient.convertToType(data['apiGroup'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IngressSpecAllOfDefaultBackendAllOfResource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IngressSpecAllOfDefaultBackendAllOfResource</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IngressSpecAllOfDefaultBackendAllOfResource.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['apiGroup'] && !(typeof data['apiGroup'] === 'string' || data['apiGroup'] instanceof String)) {
            throw new Error("Expected the field `apiGroup` to be a primitive type in the JSON string but got " + data['apiGroup']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}

IngressSpecAllOfDefaultBackendAllOfResource.RequiredProperties = ["kind", "name"];

/**
 * APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
 * @member {String} apiGroup
 */
IngressSpecAllOfDefaultBackendAllOfResource.prototype['apiGroup'] = undefined;

/**
 * Kind is the type of resource being referenced
 * @member {String} kind
 * @default ''
 */
IngressSpecAllOfDefaultBackendAllOfResource.prototype['kind'] = '';

/**
 * Name is the name of resource being referenced
 * @member {String} name
 * @default ''
 */
IngressSpecAllOfDefaultBackendAllOfResource.prototype['name'] = '';






export default IngressSpecAllOfDefaultBackendAllOfResource;

