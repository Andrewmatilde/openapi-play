/**
 * K8S Resource API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfFieldRef model module.
 * @module model/PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfFieldRef
 * @version 1.0.0
 */
class PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfFieldRef {
    /**
     * Constructs a new <code>PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfFieldRef</code>.
     * Selects a field of the pod: supports metadata.name, metadata.namespace, &#x60;metadata.labels[&#39;&lt;KEY&gt;&#39;]&#x60;, &#x60;metadata.annotations[&#39;&lt;KEY&gt;&#39;]&#x60;, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
     * @alias module:model/PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfFieldRef
     * @param fieldPath {String} Path of the field to select in the specified API version.
     */
    constructor(fieldPath) { 
        
        PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfFieldRef.initialize(this, fieldPath);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, fieldPath) { 
        obj['fieldPath'] = fieldPath || '';
    }

    /**
     * Constructs a <code>PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfFieldRef</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfFieldRef} obj Optional instance to populate.
     * @return {module:model/PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfFieldRef} The populated <code>PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfFieldRef</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfFieldRef();

            if (data.hasOwnProperty('apiVersion')) {
                obj['apiVersion'] = ApiClient.convertToType(data['apiVersion'], 'String');
            }
            if (data.hasOwnProperty('fieldPath')) {
                obj['fieldPath'] = ApiClient.convertToType(data['fieldPath'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfFieldRef</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfFieldRef</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfFieldRef.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['apiVersion'] && !(typeof data['apiVersion'] === 'string' || data['apiVersion'] instanceof String)) {
            throw new Error("Expected the field `apiVersion` to be a primitive type in the JSON string but got " + data['apiVersion']);
        }
        // ensure the json data is a string
        if (data['fieldPath'] && !(typeof data['fieldPath'] === 'string' || data['fieldPath'] instanceof String)) {
            throw new Error("Expected the field `fieldPath` to be a primitive type in the JSON string but got " + data['fieldPath']);
        }

        return true;
    }


}

PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfFieldRef.RequiredProperties = ["fieldPath"];

/**
 * Version of the schema the FieldPath is written in terms of, defaults to \"v1\".
 * @member {String} apiVersion
 */
PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfFieldRef.prototype['apiVersion'] = undefined;

/**
 * Path of the field to select in the specified API version.
 * @member {String} fieldPath
 * @default ''
 */
PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfFieldRef.prototype['fieldPath'] = '';






export default PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfFieldRef;

