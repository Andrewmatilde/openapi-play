/**
 * K8S Resource API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PodSpecAllOfSecurityContextAllOfSeccompProfile model module.
 * @module model/PodSpecAllOfSecurityContextAllOfSeccompProfile
 * @version 1.0.0
 */
class PodSpecAllOfSecurityContextAllOfSeccompProfile {
    /**
     * Constructs a new <code>PodSpecAllOfSecurityContextAllOfSeccompProfile</code>.
     * The seccomp options to use by the containers in this pod. Note that this field cannot be set when spec.os.name is windows.
     * @alias module:model/PodSpecAllOfSecurityContextAllOfSeccompProfile
     * @param type {String} type indicates which kind of seccomp profile will be applied. Valid options are:  Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
     */
    constructor(type) { 
        
        PodSpecAllOfSecurityContextAllOfSeccompProfile.initialize(this, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type) { 
        obj['type'] = type || '';
    }

    /**
     * Constructs a <code>PodSpecAllOfSecurityContextAllOfSeccompProfile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PodSpecAllOfSecurityContextAllOfSeccompProfile} obj Optional instance to populate.
     * @return {module:model/PodSpecAllOfSecurityContextAllOfSeccompProfile} The populated <code>PodSpecAllOfSecurityContextAllOfSeccompProfile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PodSpecAllOfSecurityContextAllOfSeccompProfile();

            if (data.hasOwnProperty('localhostProfile')) {
                obj['localhostProfile'] = ApiClient.convertToType(data['localhostProfile'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PodSpecAllOfSecurityContextAllOfSeccompProfile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PodSpecAllOfSecurityContextAllOfSeccompProfile</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PodSpecAllOfSecurityContextAllOfSeccompProfile.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['localhostProfile'] && !(typeof data['localhostProfile'] === 'string' || data['localhostProfile'] instanceof String)) {
            throw new Error("Expected the field `localhostProfile` to be a primitive type in the JSON string but got " + data['localhostProfile']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

PodSpecAllOfSecurityContextAllOfSeccompProfile.RequiredProperties = ["type"];

/**
 * localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must be set if type is \"Localhost\". Must NOT be set for any other type.
 * @member {String} localhostProfile
 */
PodSpecAllOfSecurityContextAllOfSeccompProfile.prototype['localhostProfile'] = undefined;

/**
 * type indicates which kind of seccomp profile will be applied. Valid options are:  Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
 * @member {String} type
 * @default ''
 */
PodSpecAllOfSecurityContextAllOfSeccompProfile.prototype['type'] = '';






export default PodSpecAllOfSecurityContextAllOfSeccompProfile;

