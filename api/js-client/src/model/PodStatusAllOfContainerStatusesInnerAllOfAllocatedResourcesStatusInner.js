/**
 * K8S Resource API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInnerAllOfResourcesInner from './PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInnerAllOfResourcesInner';

/**
 * The PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInner model module.
 * @module model/PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInner
 * @version 1.0.0
 */
class PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInner {
    /**
     * Constructs a new <code>PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInner</code>.
     * @alias module:model/PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInner
     * @param name {String} Name of the resource. Must be unique within the pod and in case of non-DRA resource, match one of the resources from the pod spec. For DRA resources, the value must be \"claim:<claim_name>/<request>\". When this status is reported about a container, the \"claim_name\" and \"request\" must match one of the claims of this container.
     */
    constructor(name) { 
        
        PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInner.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name || '';
    }

    /**
     * Constructs a <code>PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInner} obj Optional instance to populate.
     * @return {module:model/PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInner} The populated <code>PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInner();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('resources')) {
                obj['resources'] = ApiClient.convertToType(data['resources'], [PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInnerAllOfResourcesInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['resources']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['resources'])) {
                throw new Error("Expected the field `resources` to be an array in the JSON data but got " + data['resources']);
            }
            // validate the optional field `resources` (array)
            for (const item of data['resources']) {
                PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInnerAllOfResourcesInner.validateJSON(item);
            };
        }

        return true;
    }


}

PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInner.RequiredProperties = ["name"];

/**
 * Name of the resource. Must be unique within the pod and in case of non-DRA resource, match one of the resources from the pod spec. For DRA resources, the value must be \"claim:<claim_name>/<request>\". When this status is reported about a container, the \"claim_name\" and \"request\" must match one of the claims of this container.
 * @member {String} name
 * @default ''
 */
PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInner.prototype['name'] = '';

/**
 * List of unique resources health. Each element in the list contains an unique resource ID and its health. At a minimum, for the lifetime of a Pod, resource ID must uniquely identify the resource allocated to the Pod on the Node. If other Pod on the same Node reports the status with the same resource ID, it must be the same resource they share. See ResourceID type definition for a specific format it has in various use cases.
 * @member {Array.<module:model/PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInnerAllOfResourcesInner>} resources
 */
PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInner.prototype['resources'] = undefined;






export default PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInner;

