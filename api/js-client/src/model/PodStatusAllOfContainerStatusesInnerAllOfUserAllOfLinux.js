/**
 * K8S Resource API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PodStatusAllOfContainerStatusesInnerAllOfUserAllOfLinux model module.
 * @module model/PodStatusAllOfContainerStatusesInnerAllOfUserAllOfLinux
 * @version 1.0.0
 */
class PodStatusAllOfContainerStatusesInnerAllOfUserAllOfLinux {
    /**
     * Constructs a new <code>PodStatusAllOfContainerStatusesInnerAllOfUserAllOfLinux</code>.
     * Linux holds user identity information initially attached to the first process of the containers in Linux. Note that the actual running identity can be changed if the process has enough privilege to do so.
     * @alias module:model/PodStatusAllOfContainerStatusesInnerAllOfUserAllOfLinux
     * @param gid {Number} GID is the primary gid initially attached to the first process in the container
     * @param uid {Number} UID is the primary uid initially attached to the first process in the container
     */
    constructor(gid, uid) { 
        
        PodStatusAllOfContainerStatusesInnerAllOfUserAllOfLinux.initialize(this, gid, uid);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, gid, uid) { 
        obj['gid'] = gid || 0;
        obj['uid'] = uid || 0;
    }

    /**
     * Constructs a <code>PodStatusAllOfContainerStatusesInnerAllOfUserAllOfLinux</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PodStatusAllOfContainerStatusesInnerAllOfUserAllOfLinux} obj Optional instance to populate.
     * @return {module:model/PodStatusAllOfContainerStatusesInnerAllOfUserAllOfLinux} The populated <code>PodStatusAllOfContainerStatusesInnerAllOfUserAllOfLinux</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PodStatusAllOfContainerStatusesInnerAllOfUserAllOfLinux();

            if (data.hasOwnProperty('gid')) {
                obj['gid'] = ApiClient.convertToType(data['gid'], 'Number');
            }
            if (data.hasOwnProperty('supplementalGroups')) {
                obj['supplementalGroups'] = ApiClient.convertToType(data['supplementalGroups'], ['Number']);
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PodStatusAllOfContainerStatusesInnerAllOfUserAllOfLinux</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PodStatusAllOfContainerStatusesInnerAllOfUserAllOfLinux</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PodStatusAllOfContainerStatusesInnerAllOfUserAllOfLinux.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['supplementalGroups'])) {
            throw new Error("Expected the field `supplementalGroups` to be an array in the JSON data but got " + data['supplementalGroups']);
        }

        return true;
    }


}

PodStatusAllOfContainerStatusesInnerAllOfUserAllOfLinux.RequiredProperties = ["gid", "uid"];

/**
 * GID is the primary gid initially attached to the first process in the container
 * @member {Number} gid
 * @default 0
 */
PodStatusAllOfContainerStatusesInnerAllOfUserAllOfLinux.prototype['gid'] = 0;

/**
 * SupplementalGroups are the supplemental groups initially attached to the first process in the container
 * @member {Array.<Number>} supplementalGroups
 */
PodStatusAllOfContainerStatusesInnerAllOfUserAllOfLinux.prototype['supplementalGroups'] = undefined;

/**
 * UID is the primary uid initially attached to the first process in the container
 * @member {Number} uid
 * @default 0
 */
PodStatusAllOfContainerStatusesInnerAllOfUserAllOfLinux.prototype['uid'] = 0;






export default PodStatusAllOfContainerStatusesInnerAllOfUserAllOfLinux;

