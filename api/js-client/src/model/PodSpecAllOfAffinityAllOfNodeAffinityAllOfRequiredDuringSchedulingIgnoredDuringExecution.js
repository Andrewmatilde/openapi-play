/**
 * K8S Resource API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PodSpecAllOfAffinityAllOfNodeAffinityAllOfRequiredDuringSchedulingIgnoredDuringExecutionAllOfNodeSelectorTermsInner from './PodSpecAllOfAffinityAllOfNodeAffinityAllOfRequiredDuringSchedulingIgnoredDuringExecutionAllOfNodeSelectorTermsInner';

/**
 * The PodSpecAllOfAffinityAllOfNodeAffinityAllOfRequiredDuringSchedulingIgnoredDuringExecution model module.
 * @module model/PodSpecAllOfAffinityAllOfNodeAffinityAllOfRequiredDuringSchedulingIgnoredDuringExecution
 * @version 1.0.0
 */
class PodSpecAllOfAffinityAllOfNodeAffinityAllOfRequiredDuringSchedulingIgnoredDuringExecution {
    /**
     * Constructs a new <code>PodSpecAllOfAffinityAllOfNodeAffinityAllOfRequiredDuringSchedulingIgnoredDuringExecution</code>.
     * If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
     * @alias module:model/PodSpecAllOfAffinityAllOfNodeAffinityAllOfRequiredDuringSchedulingIgnoredDuringExecution
     * @param nodeSelectorTerms {Array.<module:model/PodSpecAllOfAffinityAllOfNodeAffinityAllOfRequiredDuringSchedulingIgnoredDuringExecutionAllOfNodeSelectorTermsInner>} Required. A list of node selector terms. The terms are ORed.
     */
    constructor(nodeSelectorTerms) { 
        
        PodSpecAllOfAffinityAllOfNodeAffinityAllOfRequiredDuringSchedulingIgnoredDuringExecution.initialize(this, nodeSelectorTerms);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, nodeSelectorTerms) { 
        obj['nodeSelectorTerms'] = nodeSelectorTerms;
    }

    /**
     * Constructs a <code>PodSpecAllOfAffinityAllOfNodeAffinityAllOfRequiredDuringSchedulingIgnoredDuringExecution</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PodSpecAllOfAffinityAllOfNodeAffinityAllOfRequiredDuringSchedulingIgnoredDuringExecution} obj Optional instance to populate.
     * @return {module:model/PodSpecAllOfAffinityAllOfNodeAffinityAllOfRequiredDuringSchedulingIgnoredDuringExecution} The populated <code>PodSpecAllOfAffinityAllOfNodeAffinityAllOfRequiredDuringSchedulingIgnoredDuringExecution</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PodSpecAllOfAffinityAllOfNodeAffinityAllOfRequiredDuringSchedulingIgnoredDuringExecution();

            if (data.hasOwnProperty('nodeSelectorTerms')) {
                obj['nodeSelectorTerms'] = ApiClient.convertToType(data['nodeSelectorTerms'], [PodSpecAllOfAffinityAllOfNodeAffinityAllOfRequiredDuringSchedulingIgnoredDuringExecutionAllOfNodeSelectorTermsInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PodSpecAllOfAffinityAllOfNodeAffinityAllOfRequiredDuringSchedulingIgnoredDuringExecution</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PodSpecAllOfAffinityAllOfNodeAffinityAllOfRequiredDuringSchedulingIgnoredDuringExecution</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PodSpecAllOfAffinityAllOfNodeAffinityAllOfRequiredDuringSchedulingIgnoredDuringExecution.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['nodeSelectorTerms']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['nodeSelectorTerms'])) {
                throw new Error("Expected the field `nodeSelectorTerms` to be an array in the JSON data but got " + data['nodeSelectorTerms']);
            }
            // validate the optional field `nodeSelectorTerms` (array)
            for (const item of data['nodeSelectorTerms']) {
                PodSpecAllOfAffinityAllOfNodeAffinityAllOfRequiredDuringSchedulingIgnoredDuringExecutionAllOfNodeSelectorTermsInner.validateJSON(item);
            };
        }

        return true;
    }


}

PodSpecAllOfAffinityAllOfNodeAffinityAllOfRequiredDuringSchedulingIgnoredDuringExecution.RequiredProperties = ["nodeSelectorTerms"];

/**
 * Required. A list of node selector terms. The terms are ORed.
 * @member {Array.<module:model/PodSpecAllOfAffinityAllOfNodeAffinityAllOfRequiredDuringSchedulingIgnoredDuringExecutionAllOfNodeSelectorTermsInner>} nodeSelectorTerms
 */
PodSpecAllOfAffinityAllOfNodeAffinityAllOfRequiredDuringSchedulingIgnoredDuringExecution.prototype['nodeSelectorTerms'] = undefined;






export default PodSpecAllOfAffinityAllOfNodeAffinityAllOfRequiredDuringSchedulingIgnoredDuringExecution;

