/**
 * K8S Resource API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PodSpecAllOfVolumesInnerAllOfEmptyDirAllOfSizeLimit from './PodSpecAllOfVolumesInnerAllOfEmptyDirAllOfSizeLimit';

/**
 * The PodSpecAllOfVolumesInnerAllOfEmptyDir model module.
 * @module model/PodSpecAllOfVolumesInnerAllOfEmptyDir
 * @version 1.0.0
 */
class PodSpecAllOfVolumesInnerAllOfEmptyDir {
    /**
     * Constructs a new <code>PodSpecAllOfVolumesInnerAllOfEmptyDir</code>.
     * emptyDir represents a temporary directory that shares a pod&#39;s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
     * @alias module:model/PodSpecAllOfVolumesInnerAllOfEmptyDir
     */
    constructor() { 
        
        PodSpecAllOfVolumesInnerAllOfEmptyDir.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PodSpecAllOfVolumesInnerAllOfEmptyDir</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PodSpecAllOfVolumesInnerAllOfEmptyDir} obj Optional instance to populate.
     * @return {module:model/PodSpecAllOfVolumesInnerAllOfEmptyDir} The populated <code>PodSpecAllOfVolumesInnerAllOfEmptyDir</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PodSpecAllOfVolumesInnerAllOfEmptyDir();

            if (data.hasOwnProperty('medium')) {
                obj['medium'] = ApiClient.convertToType(data['medium'], 'String');
            }
            if (data.hasOwnProperty('sizeLimit')) {
                obj['sizeLimit'] = PodSpecAllOfVolumesInnerAllOfEmptyDirAllOfSizeLimit.constructFromObject(data['sizeLimit']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PodSpecAllOfVolumesInnerAllOfEmptyDir</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PodSpecAllOfVolumesInnerAllOfEmptyDir</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['medium'] && !(typeof data['medium'] === 'string' || data['medium'] instanceof String)) {
            throw new Error("Expected the field `medium` to be a primitive type in the JSON string but got " + data['medium']);
        }
        // validate the optional field `sizeLimit`
        if (data['sizeLimit']) { // data not null
          PodSpecAllOfVolumesInnerAllOfEmptyDirAllOfSizeLimit.validateJSON(data['sizeLimit']);
        }

        return true;
    }


}



/**
 * medium represents what type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
 * @member {String} medium
 */
PodSpecAllOfVolumesInnerAllOfEmptyDir.prototype['medium'] = undefined;

/**
 * @member {module:model/PodSpecAllOfVolumesInnerAllOfEmptyDirAllOfSizeLimit} sizeLimit
 */
PodSpecAllOfVolumesInnerAllOfEmptyDir.prototype['sizeLimit'] = undefined;






export default PodSpecAllOfVolumesInnerAllOfEmptyDir;

