/**
 * K8S Resource API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PodSpecAllOfVolumesInnerAllOfFlocker model module.
 * @module model/PodSpecAllOfVolumesInnerAllOfFlocker
 * @version 1.0.0
 */
class PodSpecAllOfVolumesInnerAllOfFlocker {
    /**
     * Constructs a new <code>PodSpecAllOfVolumesInnerAllOfFlocker</code>.
     * flocker represents a Flocker volume attached to a kubelet&#39;s host machine. This depends on the Flocker control service being running. Deprecated: Flocker is deprecated and the in-tree flocker type is no longer supported.
     * @alias module:model/PodSpecAllOfVolumesInnerAllOfFlocker
     */
    constructor() { 
        
        PodSpecAllOfVolumesInnerAllOfFlocker.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PodSpecAllOfVolumesInnerAllOfFlocker</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PodSpecAllOfVolumesInnerAllOfFlocker} obj Optional instance to populate.
     * @return {module:model/PodSpecAllOfVolumesInnerAllOfFlocker} The populated <code>PodSpecAllOfVolumesInnerAllOfFlocker</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PodSpecAllOfVolumesInnerAllOfFlocker();

            if (data.hasOwnProperty('datasetName')) {
                obj['datasetName'] = ApiClient.convertToType(data['datasetName'], 'String');
            }
            if (data.hasOwnProperty('datasetUUID')) {
                obj['datasetUUID'] = ApiClient.convertToType(data['datasetUUID'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PodSpecAllOfVolumesInnerAllOfFlocker</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PodSpecAllOfVolumesInnerAllOfFlocker</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['datasetName'] && !(typeof data['datasetName'] === 'string' || data['datasetName'] instanceof String)) {
            throw new Error("Expected the field `datasetName` to be a primitive type in the JSON string but got " + data['datasetName']);
        }
        // ensure the json data is a string
        if (data['datasetUUID'] && !(typeof data['datasetUUID'] === 'string' || data['datasetUUID'] instanceof String)) {
            throw new Error("Expected the field `datasetUUID` to be a primitive type in the JSON string but got " + data['datasetUUID']);
        }

        return true;
    }


}



/**
 * datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
 * @member {String} datasetName
 */
PodSpecAllOfVolumesInnerAllOfFlocker.prototype['datasetName'] = undefined;

/**
 * datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
 * @member {String} datasetUUID
 */
PodSpecAllOfVolumesInnerAllOfFlocker.prototype['datasetUUID'] = undefined;






export default PodSpecAllOfVolumesInnerAllOfFlocker;

