/**
 * K8S Resource API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PodSpecAllOfAffinityAllOfPodAffinityAllOfPreferredDuringSchedulingIgnoredDuringExecutionInner from './PodSpecAllOfAffinityAllOfPodAffinityAllOfPreferredDuringSchedulingIgnoredDuringExecutionInner';
import PodSpecAllOfAffinityAllOfPodAffinityAllOfRequiredDuringSchedulingIgnoredDuringExecutionInner from './PodSpecAllOfAffinityAllOfPodAffinityAllOfRequiredDuringSchedulingIgnoredDuringExecutionInner';

/**
 * The PodSpecAllOfAffinityAllOfPodAffinity model module.
 * @module model/PodSpecAllOfAffinityAllOfPodAffinity
 * @version 1.0.0
 */
class PodSpecAllOfAffinityAllOfPodAffinity {
    /**
     * Constructs a new <code>PodSpecAllOfAffinityAllOfPodAffinity</code>.
     * Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
     * @alias module:model/PodSpecAllOfAffinityAllOfPodAffinity
     */
    constructor() { 
        
        PodSpecAllOfAffinityAllOfPodAffinity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PodSpecAllOfAffinityAllOfPodAffinity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PodSpecAllOfAffinityAllOfPodAffinity} obj Optional instance to populate.
     * @return {module:model/PodSpecAllOfAffinityAllOfPodAffinity} The populated <code>PodSpecAllOfAffinityAllOfPodAffinity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PodSpecAllOfAffinityAllOfPodAffinity();

            if (data.hasOwnProperty('preferredDuringSchedulingIgnoredDuringExecution')) {
                obj['preferredDuringSchedulingIgnoredDuringExecution'] = ApiClient.convertToType(data['preferredDuringSchedulingIgnoredDuringExecution'], [PodSpecAllOfAffinityAllOfPodAffinityAllOfPreferredDuringSchedulingIgnoredDuringExecutionInner]);
            }
            if (data.hasOwnProperty('requiredDuringSchedulingIgnoredDuringExecution')) {
                obj['requiredDuringSchedulingIgnoredDuringExecution'] = ApiClient.convertToType(data['requiredDuringSchedulingIgnoredDuringExecution'], [PodSpecAllOfAffinityAllOfPodAffinityAllOfRequiredDuringSchedulingIgnoredDuringExecutionInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PodSpecAllOfAffinityAllOfPodAffinity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PodSpecAllOfAffinityAllOfPodAffinity</code>.
     */
    static validateJSON(data) {
        if (data['preferredDuringSchedulingIgnoredDuringExecution']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['preferredDuringSchedulingIgnoredDuringExecution'])) {
                throw new Error("Expected the field `preferredDuringSchedulingIgnoredDuringExecution` to be an array in the JSON data but got " + data['preferredDuringSchedulingIgnoredDuringExecution']);
            }
            // validate the optional field `preferredDuringSchedulingIgnoredDuringExecution` (array)
            for (const item of data['preferredDuringSchedulingIgnoredDuringExecution']) {
                PodSpecAllOfAffinityAllOfPodAffinityAllOfPreferredDuringSchedulingIgnoredDuringExecutionInner.validateJSON(item);
            };
        }
        if (data['requiredDuringSchedulingIgnoredDuringExecution']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['requiredDuringSchedulingIgnoredDuringExecution'])) {
                throw new Error("Expected the field `requiredDuringSchedulingIgnoredDuringExecution` to be an array in the JSON data but got " + data['requiredDuringSchedulingIgnoredDuringExecution']);
            }
            // validate the optional field `requiredDuringSchedulingIgnoredDuringExecution` (array)
            for (const item of data['requiredDuringSchedulingIgnoredDuringExecution']) {
                PodSpecAllOfAffinityAllOfPodAffinityAllOfRequiredDuringSchedulingIgnoredDuringExecutionInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
 * @member {Array.<module:model/PodSpecAllOfAffinityAllOfPodAffinityAllOfPreferredDuringSchedulingIgnoredDuringExecutionInner>} preferredDuringSchedulingIgnoredDuringExecution
 */
PodSpecAllOfAffinityAllOfPodAffinity.prototype['preferredDuringSchedulingIgnoredDuringExecution'] = undefined;

/**
 * If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
 * @member {Array.<module:model/PodSpecAllOfAffinityAllOfPodAffinityAllOfRequiredDuringSchedulingIgnoredDuringExecutionInner>} requiredDuringSchedulingIgnoredDuringExecution
 */
PodSpecAllOfAffinityAllOfPodAffinity.prototype['requiredDuringSchedulingIgnoredDuringExecution'] = undefined;






export default PodSpecAllOfAffinityAllOfPodAffinity;

