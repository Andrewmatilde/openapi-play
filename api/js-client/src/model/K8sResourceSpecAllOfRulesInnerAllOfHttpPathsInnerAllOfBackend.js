/**
 * K8S Resource API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import K8sResourceSpecAllOfDefaultBackendAllOfResource from './K8sResourceSpecAllOfDefaultBackendAllOfResource';
import K8sResourceSpecAllOfDefaultBackendAllOfService from './K8sResourceSpecAllOfDefaultBackendAllOfService';

/**
 * The K8sResourceSpecAllOfRulesInnerAllOfHttpPathsInnerAllOfBackend model module.
 * @module model/K8sResourceSpecAllOfRulesInnerAllOfHttpPathsInnerAllOfBackend
 * @version 1.0.0
 */
class K8sResourceSpecAllOfRulesInnerAllOfHttpPathsInnerAllOfBackend {
    /**
     * Constructs a new <code>K8sResourceSpecAllOfRulesInnerAllOfHttpPathsInnerAllOfBackend</code>.
     * backend defines the referenced service endpoint to which the traffic will be forwarded to.
     * @alias module:model/K8sResourceSpecAllOfRulesInnerAllOfHttpPathsInnerAllOfBackend
     */
    constructor() { 
        
        K8sResourceSpecAllOfRulesInnerAllOfHttpPathsInnerAllOfBackend.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>K8sResourceSpecAllOfRulesInnerAllOfHttpPathsInnerAllOfBackend</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/K8sResourceSpecAllOfRulesInnerAllOfHttpPathsInnerAllOfBackend} obj Optional instance to populate.
     * @return {module:model/K8sResourceSpecAllOfRulesInnerAllOfHttpPathsInnerAllOfBackend} The populated <code>K8sResourceSpecAllOfRulesInnerAllOfHttpPathsInnerAllOfBackend</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new K8sResourceSpecAllOfRulesInnerAllOfHttpPathsInnerAllOfBackend();

            if (data.hasOwnProperty('resource')) {
                obj['resource'] = K8sResourceSpecAllOfDefaultBackendAllOfResource.constructFromObject(data['resource']);
            }
            if (data.hasOwnProperty('service')) {
                obj['service'] = K8sResourceSpecAllOfDefaultBackendAllOfService.constructFromObject(data['service']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>K8sResourceSpecAllOfRulesInnerAllOfHttpPathsInnerAllOfBackend</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>K8sResourceSpecAllOfRulesInnerAllOfHttpPathsInnerAllOfBackend</code>.
     */
    static validateJSON(data) {
        // validate the optional field `resource`
        if (data['resource']) { // data not null
          K8sResourceSpecAllOfDefaultBackendAllOfResource.validateJSON(data['resource']);
        }
        // validate the optional field `service`
        if (data['service']) { // data not null
          K8sResourceSpecAllOfDefaultBackendAllOfService.validateJSON(data['service']);
        }

        return true;
    }


}



/**
 * @member {module:model/K8sResourceSpecAllOfDefaultBackendAllOfResource} resource
 */
K8sResourceSpecAllOfRulesInnerAllOfHttpPathsInnerAllOfBackend.prototype['resource'] = undefined;

/**
 * @member {module:model/K8sResourceSpecAllOfDefaultBackendAllOfService} service
 */
K8sResourceSpecAllOfRulesInnerAllOfHttpPathsInnerAllOfBackend.prototype['service'] = undefined;






export default K8sResourceSpecAllOfRulesInnerAllOfHttpPathsInnerAllOfBackend;

