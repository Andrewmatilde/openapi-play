/**
 * K8S Resource API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInnerAllOfResourcesInner model module.
 * @module model/PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInnerAllOfResourcesInner
 * @version 1.0.0
 */
class PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInnerAllOfResourcesInner {
    /**
     * Constructs a new <code>PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInnerAllOfResourcesInner</code>.
     * @alias module:model/PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInnerAllOfResourcesInner
     * @param resourceID {String} ResourceID is the unique identifier of the resource. See the ResourceID type for more information.
     */
    constructor(resourceID) { 
        
        PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInnerAllOfResourcesInner.initialize(this, resourceID);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, resourceID) { 
        obj['resourceID'] = resourceID || '';
    }

    /**
     * Constructs a <code>PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInnerAllOfResourcesInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInnerAllOfResourcesInner} obj Optional instance to populate.
     * @return {module:model/PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInnerAllOfResourcesInner} The populated <code>PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInnerAllOfResourcesInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInnerAllOfResourcesInner();

            if (data.hasOwnProperty('health')) {
                obj['health'] = ApiClient.convertToType(data['health'], 'String');
            }
            if (data.hasOwnProperty('resourceID')) {
                obj['resourceID'] = ApiClient.convertToType(data['resourceID'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInnerAllOfResourcesInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInnerAllOfResourcesInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInnerAllOfResourcesInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['health'] && !(typeof data['health'] === 'string' || data['health'] instanceof String)) {
            throw new Error("Expected the field `health` to be a primitive type in the JSON string but got " + data['health']);
        }
        // ensure the json data is a string
        if (data['resourceID'] && !(typeof data['resourceID'] === 'string' || data['resourceID'] instanceof String)) {
            throw new Error("Expected the field `resourceID` to be a primitive type in the JSON string but got " + data['resourceID']);
        }

        return true;
    }


}

PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInnerAllOfResourcesInner.RequiredProperties = ["resourceID"];

/**
 * Health of the resource. can be one of:  - Healthy: operates as normal  - Unhealthy: reported unhealthy. We consider this a temporary health issue               since we do not have a mechanism today to distinguish               temporary and permanent issues.  - Unknown: The status cannot be determined.             For example, Device Plugin got unregistered and hasn't been re-registered since.  In future we may want to introduce the PermanentlyUnhealthy Status.
 * @member {String} health
 */
PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInnerAllOfResourcesInner.prototype['health'] = undefined;

/**
 * ResourceID is the unique identifier of the resource. See the ResourceID type for more information.
 * @member {String} resourceID
 * @default ''
 */
PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInnerAllOfResourcesInner.prototype['resourceID'] = '';






export default PodStatusAllOfContainerStatusesInnerAllOfAllocatedResourcesStatusInnerAllOfResourcesInner;

