/**
 * K8S Resource API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The K8sResourceMetadataAllOfOwnerReferencesInner model module.
 * @module model/K8sResourceMetadataAllOfOwnerReferencesInner
 * @version 1.0.0
 */
class K8sResourceMetadataAllOfOwnerReferencesInner {
    /**
     * Constructs a new <code>K8sResourceMetadataAllOfOwnerReferencesInner</code>.
     * @alias module:model/K8sResourceMetadataAllOfOwnerReferencesInner
     * @param apiVersion {String} API version of the referent.
     * @param kind {String} Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * @param name {String} Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
     * @param uid {String} UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
     */
    constructor(apiVersion, kind, name, uid) { 
        
        K8sResourceMetadataAllOfOwnerReferencesInner.initialize(this, apiVersion, kind, name, uid);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, apiVersion, kind, name, uid) { 
        obj['apiVersion'] = apiVersion || '';
        obj['kind'] = kind || '';
        obj['name'] = name || '';
        obj['uid'] = uid || '';
    }

    /**
     * Constructs a <code>K8sResourceMetadataAllOfOwnerReferencesInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/K8sResourceMetadataAllOfOwnerReferencesInner} obj Optional instance to populate.
     * @return {module:model/K8sResourceMetadataAllOfOwnerReferencesInner} The populated <code>K8sResourceMetadataAllOfOwnerReferencesInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new K8sResourceMetadataAllOfOwnerReferencesInner();

            if (data.hasOwnProperty('apiVersion')) {
                obj['apiVersion'] = ApiClient.convertToType(data['apiVersion'], 'String');
            }
            if (data.hasOwnProperty('blockOwnerDeletion')) {
                obj['blockOwnerDeletion'] = ApiClient.convertToType(data['blockOwnerDeletion'], 'Boolean');
            }
            if (data.hasOwnProperty('controller')) {
                obj['controller'] = ApiClient.convertToType(data['controller'], 'Boolean');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>K8sResourceMetadataAllOfOwnerReferencesInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>K8sResourceMetadataAllOfOwnerReferencesInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of K8sResourceMetadataAllOfOwnerReferencesInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['apiVersion'] && !(typeof data['apiVersion'] === 'string' || data['apiVersion'] instanceof String)) {
            throw new Error("Expected the field `apiVersion` to be a primitive type in the JSON string but got " + data['apiVersion']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['uid'] && !(typeof data['uid'] === 'string' || data['uid'] instanceof String)) {
            throw new Error("Expected the field `uid` to be a primitive type in the JSON string but got " + data['uid']);
        }

        return true;
    }


}

K8sResourceMetadataAllOfOwnerReferencesInner.RequiredProperties = ["apiVersion", "kind", "name", "uid"];

/**
 * API version of the referent.
 * @member {String} apiVersion
 * @default ''
 */
K8sResourceMetadataAllOfOwnerReferencesInner.prototype['apiVersion'] = '';

/**
 * If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
 * @member {Boolean} blockOwnerDeletion
 */
K8sResourceMetadataAllOfOwnerReferencesInner.prototype['blockOwnerDeletion'] = undefined;

/**
 * If true, this reference points to the managing controller.
 * @member {Boolean} controller
 */
K8sResourceMetadataAllOfOwnerReferencesInner.prototype['controller'] = undefined;

/**
 * Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
 * @member {String} kind
 * @default ''
 */
K8sResourceMetadataAllOfOwnerReferencesInner.prototype['kind'] = '';

/**
 * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
 * @member {String} name
 * @default ''
 */
K8sResourceMetadataAllOfOwnerReferencesInner.prototype['name'] = '';

/**
 * UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
 * @member {String} uid
 * @default ''
 */
K8sResourceMetadataAllOfOwnerReferencesInner.prototype['uid'] = '';






export default K8sResourceMetadataAllOfOwnerReferencesInner;

