/**
 * K8S Resource API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PodSpecAllOfContainersInnerAllOfSecurityContextAllOfAppArmorProfile model module.
 * @module model/PodSpecAllOfContainersInnerAllOfSecurityContextAllOfAppArmorProfile
 * @version 1.0.0
 */
class PodSpecAllOfContainersInnerAllOfSecurityContextAllOfAppArmorProfile {
    /**
     * Constructs a new <code>PodSpecAllOfContainersInnerAllOfSecurityContextAllOfAppArmorProfile</code>.
     * appArmorProfile is the AppArmor options to use by this container. If set, this profile overrides the pod&#39;s appArmorProfile. Note that this field cannot be set when spec.os.name is windows.
     * @alias module:model/PodSpecAllOfContainersInnerAllOfSecurityContextAllOfAppArmorProfile
     * @param type {String} type indicates which kind of AppArmor profile will be applied. Valid options are:   Localhost - a profile pre-loaded on the node.   RuntimeDefault - the container runtime's default profile.   Unconfined - no AppArmor enforcement.
     */
    constructor(type) { 
        
        PodSpecAllOfContainersInnerAllOfSecurityContextAllOfAppArmorProfile.initialize(this, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type) { 
        obj['type'] = type || '';
    }

    /**
     * Constructs a <code>PodSpecAllOfContainersInnerAllOfSecurityContextAllOfAppArmorProfile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PodSpecAllOfContainersInnerAllOfSecurityContextAllOfAppArmorProfile} obj Optional instance to populate.
     * @return {module:model/PodSpecAllOfContainersInnerAllOfSecurityContextAllOfAppArmorProfile} The populated <code>PodSpecAllOfContainersInnerAllOfSecurityContextAllOfAppArmorProfile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PodSpecAllOfContainersInnerAllOfSecurityContextAllOfAppArmorProfile();

            if (data.hasOwnProperty('localhostProfile')) {
                obj['localhostProfile'] = ApiClient.convertToType(data['localhostProfile'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PodSpecAllOfContainersInnerAllOfSecurityContextAllOfAppArmorProfile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PodSpecAllOfContainersInnerAllOfSecurityContextAllOfAppArmorProfile</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PodSpecAllOfContainersInnerAllOfSecurityContextAllOfAppArmorProfile.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['localhostProfile'] && !(typeof data['localhostProfile'] === 'string' || data['localhostProfile'] instanceof String)) {
            throw new Error("Expected the field `localhostProfile` to be a primitive type in the JSON string but got " + data['localhostProfile']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

PodSpecAllOfContainersInnerAllOfSecurityContextAllOfAppArmorProfile.RequiredProperties = ["type"];

/**
 * localhostProfile indicates a profile loaded on the node that should be used. The profile must be preconfigured on the node to work. Must match the loaded name of the profile. Must be set if and only if type is \"Localhost\".
 * @member {String} localhostProfile
 */
PodSpecAllOfContainersInnerAllOfSecurityContextAllOfAppArmorProfile.prototype['localhostProfile'] = undefined;

/**
 * type indicates which kind of AppArmor profile will be applied. Valid options are:   Localhost - a profile pre-loaded on the node.   RuntimeDefault - the container runtime's default profile.   Unconfined - no AppArmor enforcement.
 * @member {String} type
 * @default ''
 */
PodSpecAllOfContainersInnerAllOfSecurityContextAllOfAppArmorProfile.prototype['type'] = '';






export default PodSpecAllOfContainersInnerAllOfSecurityContextAllOfAppArmorProfile;

