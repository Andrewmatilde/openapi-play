/**
 * K8S Resource API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfConfigMapKeyRef model module.
 * @module model/PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfConfigMapKeyRef
 * @version 1.0.0
 */
class PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfConfigMapKeyRef {
    /**
     * Constructs a new <code>PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfConfigMapKeyRef</code>.
     * Selects a key of a ConfigMap.
     * @alias module:model/PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfConfigMapKeyRef
     * @param key {String} The key to select.
     */
    constructor(key) { 
        
        PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfConfigMapKeyRef.initialize(this, key);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, key) { 
        obj['key'] = key || '';
        obj['name'] = '';
    }

    /**
     * Constructs a <code>PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfConfigMapKeyRef</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfConfigMapKeyRef} obj Optional instance to populate.
     * @return {module:model/PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfConfigMapKeyRef} The populated <code>PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfConfigMapKeyRef</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfConfigMapKeyRef();

            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('optional')) {
                obj['optional'] = ApiClient.convertToType(data['optional'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfConfigMapKeyRef</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfConfigMapKeyRef</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfConfigMapKeyRef.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}

PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfConfigMapKeyRef.RequiredProperties = ["key"];

/**
 * The key to select.
 * @member {String} key
 * @default ''
 */
PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfConfigMapKeyRef.prototype['key'] = '';

/**
 * Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
 * @member {String} name
 * @default ''
 */
PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfConfigMapKeyRef.prototype['name'] = '';

/**
 * Specify whether the ConfigMap or its key must be defined
 * @member {Boolean} optional
 */
PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfConfigMapKeyRef.prototype['optional'] = undefined;






export default PodSpecAllOfContainersInnerAllOfEnvInnerAllOfValueFromAllOfConfigMapKeyRef;

