/**
 * K8S Resource API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IngressSpecAllOfDefaultBackendAllOfServiceAllOfPort from './IngressSpecAllOfDefaultBackendAllOfServiceAllOfPort';

/**
 * The IngressSpecAllOfDefaultBackendAllOfService model module.
 * @module model/IngressSpecAllOfDefaultBackendAllOfService
 * @version 1.0.0
 */
class IngressSpecAllOfDefaultBackendAllOfService {
    /**
     * Constructs a new <code>IngressSpecAllOfDefaultBackendAllOfService</code>.
     * service references a service as a backend. This is a mutually exclusive setting with \&quot;Resource\&quot;.
     * @alias module:model/IngressSpecAllOfDefaultBackendAllOfService
     * @param name {String} name is the referenced service. The service must exist in the same namespace as the Ingress object.
     */
    constructor(name) { 
        
        IngressSpecAllOfDefaultBackendAllOfService.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name || '';
    }

    /**
     * Constructs a <code>IngressSpecAllOfDefaultBackendAllOfService</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IngressSpecAllOfDefaultBackendAllOfService} obj Optional instance to populate.
     * @return {module:model/IngressSpecAllOfDefaultBackendAllOfService} The populated <code>IngressSpecAllOfDefaultBackendAllOfService</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IngressSpecAllOfDefaultBackendAllOfService();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('port')) {
                obj['port'] = IngressSpecAllOfDefaultBackendAllOfServiceAllOfPort.constructFromObject(data['port']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IngressSpecAllOfDefaultBackendAllOfService</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IngressSpecAllOfDefaultBackendAllOfService</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IngressSpecAllOfDefaultBackendAllOfService.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `port`
        if (data['port']) { // data not null
          IngressSpecAllOfDefaultBackendAllOfServiceAllOfPort.validateJSON(data['port']);
        }

        return true;
    }


}

IngressSpecAllOfDefaultBackendAllOfService.RequiredProperties = ["name"];

/**
 * name is the referenced service. The service must exist in the same namespace as the Ingress object.
 * @member {String} name
 * @default ''
 */
IngressSpecAllOfDefaultBackendAllOfService.prototype['name'] = '';

/**
 * @member {module:model/IngressSpecAllOfDefaultBackendAllOfServiceAllOfPort} port
 */
IngressSpecAllOfDefaultBackendAllOfService.prototype['port'] = undefined;






export default IngressSpecAllOfDefaultBackendAllOfService;

