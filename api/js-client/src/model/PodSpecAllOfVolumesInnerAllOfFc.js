/**
 * K8S Resource API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PodSpecAllOfVolumesInnerAllOfFc model module.
 * @module model/PodSpecAllOfVolumesInnerAllOfFc
 * @version 1.0.0
 */
class PodSpecAllOfVolumesInnerAllOfFc {
    /**
     * Constructs a new <code>PodSpecAllOfVolumesInnerAllOfFc</code>.
     * fc represents a Fibre Channel resource that is attached to a kubelet&#39;s host machine and then exposed to the pod.
     * @alias module:model/PodSpecAllOfVolumesInnerAllOfFc
     */
    constructor() { 
        
        PodSpecAllOfVolumesInnerAllOfFc.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PodSpecAllOfVolumesInnerAllOfFc</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PodSpecAllOfVolumesInnerAllOfFc} obj Optional instance to populate.
     * @return {module:model/PodSpecAllOfVolumesInnerAllOfFc} The populated <code>PodSpecAllOfVolumesInnerAllOfFc</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PodSpecAllOfVolumesInnerAllOfFc();

            if (data.hasOwnProperty('fsType')) {
                obj['fsType'] = ApiClient.convertToType(data['fsType'], 'String');
            }
            if (data.hasOwnProperty('lun')) {
                obj['lun'] = ApiClient.convertToType(data['lun'], 'Number');
            }
            if (data.hasOwnProperty('readOnly')) {
                obj['readOnly'] = ApiClient.convertToType(data['readOnly'], 'Boolean');
            }
            if (data.hasOwnProperty('targetWWNs')) {
                obj['targetWWNs'] = ApiClient.convertToType(data['targetWWNs'], ['String']);
            }
            if (data.hasOwnProperty('wwids')) {
                obj['wwids'] = ApiClient.convertToType(data['wwids'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PodSpecAllOfVolumesInnerAllOfFc</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PodSpecAllOfVolumesInnerAllOfFc</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['fsType'] && !(typeof data['fsType'] === 'string' || data['fsType'] instanceof String)) {
            throw new Error("Expected the field `fsType` to be a primitive type in the JSON string but got " + data['fsType']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['targetWWNs'])) {
            throw new Error("Expected the field `targetWWNs` to be an array in the JSON data but got " + data['targetWWNs']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['wwids'])) {
            throw new Error("Expected the field `wwids` to be an array in the JSON data but got " + data['wwids']);
        }

        return true;
    }


}



/**
 * fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.
 * @member {String} fsType
 */
PodSpecAllOfVolumesInnerAllOfFc.prototype['fsType'] = undefined;

/**
 * lun is Optional: FC target lun number
 * @member {Number} lun
 */
PodSpecAllOfVolumesInnerAllOfFc.prototype['lun'] = undefined;

/**
 * readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
 * @member {Boolean} readOnly
 */
PodSpecAllOfVolumesInnerAllOfFc.prototype['readOnly'] = undefined;

/**
 * targetWWNs is Optional: FC target worldwide names (WWNs)
 * @member {Array.<String>} targetWWNs
 */
PodSpecAllOfVolumesInnerAllOfFc.prototype['targetWWNs'] = undefined;

/**
 * wwids Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
 * @member {Array.<String>} wwids
 */
PodSpecAllOfVolumesInnerAllOfFc.prototype['wwids'] = undefined;






export default PodSpecAllOfVolumesInnerAllOfFc;

