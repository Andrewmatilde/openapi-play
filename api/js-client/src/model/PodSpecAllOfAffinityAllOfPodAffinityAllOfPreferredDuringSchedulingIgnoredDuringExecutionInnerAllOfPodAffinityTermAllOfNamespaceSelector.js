/**
 * K8S Resource API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PodSpecAllOfAffinityAllOfPodAffinityAllOfPreferredDuringSchedulingIgnoredDuringExecutionInnerAllOfPodAffinityTermAllOfLabelSelectorAllOfMatchExpressionsInner from './PodSpecAllOfAffinityAllOfPodAffinityAllOfPreferredDuringSchedulingIgnoredDuringExecutionInnerAllOfPodAffinityTermAllOfLabelSelectorAllOfMatchExpressionsInner';

/**
 * The PodSpecAllOfAffinityAllOfPodAffinityAllOfPreferredDuringSchedulingIgnoredDuringExecutionInnerAllOfPodAffinityTermAllOfNamespaceSelector model module.
 * @module model/PodSpecAllOfAffinityAllOfPodAffinityAllOfPreferredDuringSchedulingIgnoredDuringExecutionInnerAllOfPodAffinityTermAllOfNamespaceSelector
 * @version 1.0.0
 */
class PodSpecAllOfAffinityAllOfPodAffinityAllOfPreferredDuringSchedulingIgnoredDuringExecutionInnerAllOfPodAffinityTermAllOfNamespaceSelector {
    /**
     * Constructs a new <code>PodSpecAllOfAffinityAllOfPodAffinityAllOfPreferredDuringSchedulingIgnoredDuringExecutionInnerAllOfPodAffinityTermAllOfNamespaceSelector</code>.
     * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \&quot;this pod&#39;s namespace\&quot;. An empty selector ({}) matches all namespaces.
     * @alias module:model/PodSpecAllOfAffinityAllOfPodAffinityAllOfPreferredDuringSchedulingIgnoredDuringExecutionInnerAllOfPodAffinityTermAllOfNamespaceSelector
     */
    constructor() { 
        
        PodSpecAllOfAffinityAllOfPodAffinityAllOfPreferredDuringSchedulingIgnoredDuringExecutionInnerAllOfPodAffinityTermAllOfNamespaceSelector.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PodSpecAllOfAffinityAllOfPodAffinityAllOfPreferredDuringSchedulingIgnoredDuringExecutionInnerAllOfPodAffinityTermAllOfNamespaceSelector</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PodSpecAllOfAffinityAllOfPodAffinityAllOfPreferredDuringSchedulingIgnoredDuringExecutionInnerAllOfPodAffinityTermAllOfNamespaceSelector} obj Optional instance to populate.
     * @return {module:model/PodSpecAllOfAffinityAllOfPodAffinityAllOfPreferredDuringSchedulingIgnoredDuringExecutionInnerAllOfPodAffinityTermAllOfNamespaceSelector} The populated <code>PodSpecAllOfAffinityAllOfPodAffinityAllOfPreferredDuringSchedulingIgnoredDuringExecutionInnerAllOfPodAffinityTermAllOfNamespaceSelector</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PodSpecAllOfAffinityAllOfPodAffinityAllOfPreferredDuringSchedulingIgnoredDuringExecutionInnerAllOfPodAffinityTermAllOfNamespaceSelector();

            if (data.hasOwnProperty('matchExpressions')) {
                obj['matchExpressions'] = ApiClient.convertToType(data['matchExpressions'], [PodSpecAllOfAffinityAllOfPodAffinityAllOfPreferredDuringSchedulingIgnoredDuringExecutionInnerAllOfPodAffinityTermAllOfLabelSelectorAllOfMatchExpressionsInner]);
            }
            if (data.hasOwnProperty('matchLabels')) {
                obj['matchLabels'] = ApiClient.convertToType(data['matchLabels'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PodSpecAllOfAffinityAllOfPodAffinityAllOfPreferredDuringSchedulingIgnoredDuringExecutionInnerAllOfPodAffinityTermAllOfNamespaceSelector</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PodSpecAllOfAffinityAllOfPodAffinityAllOfPreferredDuringSchedulingIgnoredDuringExecutionInnerAllOfPodAffinityTermAllOfNamespaceSelector</code>.
     */
    static validateJSON(data) {
        if (data['matchExpressions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['matchExpressions'])) {
                throw new Error("Expected the field `matchExpressions` to be an array in the JSON data but got " + data['matchExpressions']);
            }
            // validate the optional field `matchExpressions` (array)
            for (const item of data['matchExpressions']) {
                PodSpecAllOfAffinityAllOfPodAffinityAllOfPreferredDuringSchedulingIgnoredDuringExecutionInnerAllOfPodAffinityTermAllOfLabelSelectorAllOfMatchExpressionsInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * matchExpressions is a list of label selector requirements. The requirements are ANDed.
 * @member {Array.<module:model/PodSpecAllOfAffinityAllOfPodAffinityAllOfPreferredDuringSchedulingIgnoredDuringExecutionInnerAllOfPodAffinityTermAllOfLabelSelectorAllOfMatchExpressionsInner>} matchExpressions
 */
PodSpecAllOfAffinityAllOfPodAffinityAllOfPreferredDuringSchedulingIgnoredDuringExecutionInnerAllOfPodAffinityTermAllOfNamespaceSelector.prototype['matchExpressions'] = undefined;

/**
 * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.
 * @member {Object.<String, String>} matchLabels
 */
PodSpecAllOfAffinityAllOfPodAffinityAllOfPreferredDuringSchedulingIgnoredDuringExecutionInnerAllOfPodAffinityTermAllOfNamespaceSelector.prototype['matchLabels'] = undefined;






export default PodSpecAllOfAffinityAllOfPodAffinityAllOfPreferredDuringSchedulingIgnoredDuringExecutionInnerAllOfPodAffinityTermAllOfNamespaceSelector;

