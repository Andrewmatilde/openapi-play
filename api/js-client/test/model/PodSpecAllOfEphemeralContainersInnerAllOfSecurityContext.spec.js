/**
 * K8S Resource API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.K8SResourceApi);
  }
}(this, function(expect, K8SResourceApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new K8SResourceApi.PodSpecAllOfEphemeralContainersInnerAllOfSecurityContext();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PodSpecAllOfEphemeralContainersInnerAllOfSecurityContext', function() {
    it('should create an instance of PodSpecAllOfEphemeralContainersInnerAllOfSecurityContext', function() {
      // uncomment below and update the code to test PodSpecAllOfEphemeralContainersInnerAllOfSecurityContext
      //var instance = new K8SResourceApi.PodSpecAllOfEphemeralContainersInnerAllOfSecurityContext();
      //expect(instance).to.be.a(K8SResourceApi.PodSpecAllOfEphemeralContainersInnerAllOfSecurityContext);
    });

    it('should have the property allowPrivilegeEscalation (base name: "allowPrivilegeEscalation")', function() {
      // uncomment below and update the code to test the property allowPrivilegeEscalation
      //var instance = new K8SResourceApi.PodSpecAllOfEphemeralContainersInnerAllOfSecurityContext();
      //expect(instance).to.be();
    });

    it('should have the property appArmorProfile (base name: "appArmorProfile")', function() {
      // uncomment below and update the code to test the property appArmorProfile
      //var instance = new K8SResourceApi.PodSpecAllOfEphemeralContainersInnerAllOfSecurityContext();
      //expect(instance).to.be();
    });

    it('should have the property capabilities (base name: "capabilities")', function() {
      // uncomment below and update the code to test the property capabilities
      //var instance = new K8SResourceApi.PodSpecAllOfEphemeralContainersInnerAllOfSecurityContext();
      //expect(instance).to.be();
    });

    it('should have the property privileged (base name: "privileged")', function() {
      // uncomment below and update the code to test the property privileged
      //var instance = new K8SResourceApi.PodSpecAllOfEphemeralContainersInnerAllOfSecurityContext();
      //expect(instance).to.be();
    });

    it('should have the property procMount (base name: "procMount")', function() {
      // uncomment below and update the code to test the property procMount
      //var instance = new K8SResourceApi.PodSpecAllOfEphemeralContainersInnerAllOfSecurityContext();
      //expect(instance).to.be();
    });

    it('should have the property readOnlyRootFilesystem (base name: "readOnlyRootFilesystem")', function() {
      // uncomment below and update the code to test the property readOnlyRootFilesystem
      //var instance = new K8SResourceApi.PodSpecAllOfEphemeralContainersInnerAllOfSecurityContext();
      //expect(instance).to.be();
    });

    it('should have the property runAsGroup (base name: "runAsGroup")', function() {
      // uncomment below and update the code to test the property runAsGroup
      //var instance = new K8SResourceApi.PodSpecAllOfEphemeralContainersInnerAllOfSecurityContext();
      //expect(instance).to.be();
    });

    it('should have the property runAsNonRoot (base name: "runAsNonRoot")', function() {
      // uncomment below and update the code to test the property runAsNonRoot
      //var instance = new K8SResourceApi.PodSpecAllOfEphemeralContainersInnerAllOfSecurityContext();
      //expect(instance).to.be();
    });

    it('should have the property runAsUser (base name: "runAsUser")', function() {
      // uncomment below and update the code to test the property runAsUser
      //var instance = new K8SResourceApi.PodSpecAllOfEphemeralContainersInnerAllOfSecurityContext();
      //expect(instance).to.be();
    });

    it('should have the property seLinuxOptions (base name: "seLinuxOptions")', function() {
      // uncomment below and update the code to test the property seLinuxOptions
      //var instance = new K8SResourceApi.PodSpecAllOfEphemeralContainersInnerAllOfSecurityContext();
      //expect(instance).to.be();
    });

    it('should have the property seccompProfile (base name: "seccompProfile")', function() {
      // uncomment below and update the code to test the property seccompProfile
      //var instance = new K8SResourceApi.PodSpecAllOfEphemeralContainersInnerAllOfSecurityContext();
      //expect(instance).to.be();
    });

    it('should have the property windowsOptions (base name: "windowsOptions")', function() {
      // uncomment below and update the code to test the property windowsOptions
      //var instance = new K8SResourceApi.PodSpecAllOfEphemeralContainersInnerAllOfSecurityContext();
      //expect(instance).to.be();
    });

  });

}));
